{"version":3,"sources":["core/layout-utility.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ;AAEnC;IAAA;IAeA,CAAC;IAbQ,oBAAM,GAAb,UAAc,IAAY,EAAE,IAAc,EAAE,WAAoB;QAC9D,IAAI,GAAG,WAAW,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,IAAI,CAAC;QAE1E,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACT,IAAI,CAAC,OAAO,CAAC,UAAC,EAAU;gBACtB,EAAE,GAAG,WAAW,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC;gBAC5D,KAAK,GAAG,KAAK,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAEH,oBAAC;AAAD,CAfA,AAeC,IAAA","file":"core/layout-utility.js","sourcesContent":["import { WHITESPACE } from './core';\n\nexport class LayoutUtility {\n\n  static findIn(item: string, list: string[], replaceWith?: string) {\n    item = replaceWith && item ? item.replace(WHITESPACE, replaceWith) : item;\n\n    var found = false;\n    if (item) {\n      list.forEach((it: string) => {\n        it = replaceWith ? it.replace(WHITESPACE, replaceWith) : it;\n        found = found || (it === item);\n      });\n    }\n    return found;\n  }\n\n}\n"],"sourceRoot":"/source/"}