var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { NgModule } from '@angular/core';
import { BREAKPOINTS, AttributeDirectiveFactory } from '../core';
var directives = [];
var generator = new AttributeDirectiveFactory();
BREAKPOINTS.forEach(function (breakPoint) {
    var name = breakPoint ? "hide-" + breakPoint : 'hide';
    directives.push(generator.generateDirective(name, breakPoint));
});
export var HideModule = (function () {
    function HideModule() {
    }
    HideModule.forRoot = function () {
        return {
            ngModule: HideModule,
            providers: []
        };
    };
    HideModule = __decorate([
        NgModule({
            declarations: directives.slice(),
            imports: [],
            exports: directives.slice(),
        }), 
        __metadata('design:paramtypes', [])
    ], HideModule);
    return HideModule;
}());

//# sourceMappingURL=hide.js.map
